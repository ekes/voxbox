<?php

include_once('voxbox_og.features.inc');

/**
 * Implementation of hook_voipscript_load_script().
 */
function voxbox_og_voipscript_load_script($script_name, $params = NULL) {
  if (! in_array($script_name, voxbox_og_voipscript_get_script_names())) {
    return;
  }

  module_load_include('inc', 'voxbox_og', 'voxbox_og.script');
  switch ($script_name) {
    case 'voxbox_og_node_script':
      $node = node_load($params['nid']);
      return _voxbox_og_node_script($node);
    case 'voxbox_og_record_announcement':
      $node = node_load($params['nid']);
      return _voxbox_og_record_announcement($node);
    case 'voxbox_og_save_announcement':
      return _voxbox_og_save_announcement($params['nid'], $params['fid']);
    case 'voxbox_og_notifications_status':
      return _voxbox_og_notifications_status();
    case 'voxbox_og_notifications_subscribe':
      return _voxbox_og_notifications_subscribe($params['gid']);
    case 'voxbox_og_notifications_unsubscribe':
      return _voxbox_og_notifications_unsubscribe($params['gid']);
    case 'voxbox_og_subscribe_user':
      return _voxbox_og_subscribe_user($params['gid']);
    case 'voxbox_og_delete_subscription':
      return _voxbox_og_delete_subscription($params['gid']);
  }
}

/**
 * Implementation of hook_voipscript_get_script_names().
 */
function voxbox_og_voipscript_get_script_names() {
  return array(
    'voxbox_og_node_script',
    'voxbox_og_record_announcement',
    'voxbox_og_save_announcement',
    'voxbox_og_notifications_Status',
    // Helper scripts, forces correct update of user variable:-
    'voxbox_og_notifications_subscribe',
    'voxbox_og_notifications_unsubscribe',
    'voxbox_og_subscribe_user',
    'voxbox_og_delete_subscription',
  );
}

/**
 * Helper function: test if user has any notifications for group.
 *
 * @param int $uid
 *   User ID.
 * @param int $gid
 *   Group ID.
 * 
 * @return int
 *   Number of subscriptions to the group.
 */
function _voxbox_og_notifications_subscribed($uid, $gid) {
  // Anonymous user, not logged in, no subscriptions.
  if (! $uid) {
    return 0;
  }

  // Parameters for notifications_get_subscriptions here are:-
  // $parmas = array('type' => 'node/taxonomy or in this case grouptype from 
  // og_notifications', 'uid' => 'user id'),
  // $conditions of fields = array('group' => 'group id', 'type' => 'content
  // type, NULL for any)
  return count(notifications_get_subscriptions(array('type' => 'grouptype', 'uid' => $uid), array('group' => $gid, 'type' => NULL)));
}
